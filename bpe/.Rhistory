bpe <- read.csv("C:/Users/james/Downloads/bpe21_ensemble_xy_csv",sep = ";")
bpe <- read.csv("C:/Users/james/Downloads/bpe21_ensemble_xy_csv.csv",sep = ";")
bpe <- read.csv("C:/Users/james/Downloads/bpe21_ensemble_xy.csv",sep = ";")
bpe <- read.csv("C:/Users/james/Downloads/bpe21_ensemble_xy_csv/bpe21_ensemble_xy_csv.csv",sep = ";")
bpe <- read.csv("C:/Users/james/Downloads/bpe21_ensemble_xy_csv/bpe21_ensemble_xy.csv",sep = ";")
library(tidyr)
library(dplyr)
library(magrittr
library(magrittr)
library(magrittr)
bpe1 <- bpe[,c(4,5,7,8,9,10,21)]
INF <- bpe1 %>%
filter(TYPEQU == "D232")
PEDPOD <- bpe1 %>%
filter(TYPEQU == "D237")
MK <- bpe1 %>%
filter(TYPEQU == "D233")
PSY <- bpe1 %>%
filter(TYPEQU == "D243")
MED <- bpe1 %>%
filter(TYPEQU == "D201")
write.xlsx(INF,"/inf/inf.xlsx")
openxlsx::write.xlsx(INF,"/inf/inf.xlsx")
openxlsx::write.xlsx(INF,"inf/inf.xlsx")
openxlsx::write.xlsx(PEDPOD,"pedpod/pedpod.xlsx")
openxlsx::write.xlsx(MK,"mk/mk.xlsx")
openxlsx::write.xlsx(PSY,"psy/psy.xlsx")
openxlsx::write.xlsx(MED,"med/med.xlsx")
data = '{
"username": "james.michelot@ithea-conseil.fr",
"password": "CCjJ#$KRjKME&e8e"
}'
headers = c(
`Content-Type` = "application/json",
`Accept` = "application/json"
)
tok <- httr::POST(url = "https://registre-national-entreprises.inpi.fr/api/sso/login", httr::add_headers(.headers=headers),body = data)
tok
token<-httr::content(tok)
token<-as.character(token[[1]])
#RPE_COMPANY
headers = c(
`Content-Type` = "application/json",
`Accept` = "application/json",
`Authorization` = paste("Bearer",token)
)
contentz<- NULL
contentz <- httr::GET(url = 'https://registre-national-entreprises.inpi.fr/api/companies?codeCategory=01010101', httr::add_headers(.headers=headers))
View(contentz)
res<-httr::content(contentz)
contentz <- httr::GET(url = 'https://registre-national-entreprises.inpi.fr/api/companies?codeCategory=01010101&pageSize=1100', httr::add_headers(.headers=headers))
res<-httr::content(contentz)
contentz <- httr::GET(url = 'https://registre-national-entreprises.inpi.fr/api/companies?codeCategory=01010101&pageSize=1000', httr::add_headers(.headers=headers))
res<-httr::content(contentz)
contentz <- httr::GET(url = 'https://registre-national-entreprises.inpi.fr/api/companies?codeCategory=01010101&pageSize=1000&page=1', httr::add_headers(.headers=headers))
contentz <- httr::GET(url = 'https://registre-national-entreprises.inpi.fr/api/companies?codeCategory=01010101&pageSize=1000&page=2', httr::add_headers(.headers=headers))
res<-httr::content(contentz)
openxlsx::write.xlsx(res,("res.xlsx"))
# Chemin vers le fichier zip
zip_path <- "C:/Users/james/Downloads/stock RNE formalité.zip"
# Nom du fichier JSON dans le ZIP
file_name <- "stock_000001.json"
# Ouvrir une connexion au fichier dans le ZIP sans le décompresser physiquement
con <- unz(zip_path, file_name)
# Lire le contenu JSON à partir de la connexion
data_json <- fromJSON(con)
# Charger le package jsonlite
library(jsonlite)
# Lire le contenu JSON à partir de la connexion
data_json <- fromJSON(con)
View(data_json)
flat_json <- flatten(data_json)
View(flat_json)
View(flat_json)
flat_json2 <- flat_json %>%
filter(formality.content.exploitation.etablissementPrincipal.adresse.voie != "")
flat_json2 <- flat_json %>%
filter(formality.content.exploitation.etablissementPrincipal.adresse.voie || formality.content.exploitation.adresseEntreprise.adresse.voie != "")
flat_json2 <- flat_json %>%
filter(formality.content.exploitation.adresseEntreprise.adresse.voie != "")
flat_json3 <- flat_json %>%
filter(formality.content.exploitation.adresseEntreprise.adresse.voie != "")
flat_json3 <- flat_json %>%
filter(formality.content.exploitation.adresseEntreprise.adresse.voie != "NA")
flat_json3 <- flat_json %>%
filter(formality.content.exploitation.adresseEntreprise.adresse.voie != "m")
flat_json3 <- flat_json %>%
filter(formality.content.exploitation.adresseEntreprise.adresse.voie)
flat_json3 <- flat_json %>%
filter(is.character(formality.content.exploitation.adresseEntreprise.adresse.voie))
flat_json3 <- flat_json %>%
filter(length(formality.content.exploitation.adresseEntreprise.adresse.voie)>2)
flat_json3 <- flat_json %>%
filter(nchar(formality.content.exploitation.adresseEntreprise.adresse.voie)>2)
